load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "submissions",
    srcs = [
        "00001-689996230-two-sum.go",
        "00001-692799105-two-sum.go",
        "00002-689836294-add-two-numbers.go",
        "00009-690057830-palindrome-number.go",
        "00013-688942766-roman-to-integer.go",
        "00013-688944623-roman-to-integer.go",
        "00013-688944842-roman-to-integer.go",
        "00013-688947098-roman-to-integer.go",
        "00014-689722001-longest-common-prefix.go",
        "00014-689740949-longest-common-prefix.go",
        "00014-689769078-longest-common-prefix.go",
        "00020-690416642-valid-parentheses.go",
        "00021-690739883-merge-two-sorted-lists.go",
        "00023-1091201621-merge-k-sorted-lists.go",
        "00025-1091200011-reverse-nodes-in-k-group.go",
        "00026-694400494-remove-duplicates-from-sorted-array.go",
        "00030-1091199226-substring-with-concatenation-of-all-words.go",
        "00035-691682236-search-insert-position.go",
        "00035-692355461-search-insert-position.go",
        "00042-1087560136-trapping-rain-water.go",
        "00052-1091201363-n-queens-ii.go",
        "00053-691571728-maximum-subarray.go",
        "00057-1091198577-insert-interval.go",
        "00069-693649416-sqrtx.go",
        "00076-1091199352-minimum-window-substring.go",
        "00088-690860583-merge-sorted-array.go",
        "00088-690867602-merge-sorted-array.go",
        "00088-692799831-merge-sorted-array.go",
        "00098-1088457217-validate-binary-search-tree.go",
        "00098-1088466156-validate-binary-search-tree.go",
        "00098-1088466442-validate-binary-search-tree.go",
        "00102-1087481177-binary-tree-level-order-traversal.go",
        "00102-1087485265-binary-tree-level-order-traversal.go",
        "00103-1087492568-binary-tree-zigzag-level-order-traversal.go",
        "00103-1087500671-binary-tree-zigzag-level-order-traversal.go",
        "00103-1087501208-binary-tree-zigzag-level-order-traversal.go",
        "00105-1091200227-construct-binary-tree-from-preorder-and-inorder-traversal.go",
        "00106-1091200359-construct-binary-tree-from-inorder-and-postorder-traversal.go",
        "00114-1090504012-flatten-binary-tree-to-linked-list.go",
        "00121-692928951-best-time-to-buy-and-sell-stock.go",
        "00124-1091200483-binary-tree-maximum-path-sum.go",
        "00127-1091201004-word-ladder.go",
        "00129-1089101627-sum-root-to-leaf-numbers.go",
        "00129-1089106155-sum-root-to-leaf-numbers.go",
        "00148-1089829638-sort-list.go",
        "00162-1091201779-find-peak-element.go",
        "00167-690000287-two-sum-ii-input-array-is-sorted.go",
        "00167-693606840-two-sum-ii-input-array-is-sorted.go",
        "00189-692284664-rotate-array.go",
        "00189-692352888-rotate-array.go",
        "00191-692709119-number-of-1-bits.go",
        "00199-1087461734-binary-tree-right-side-view.go",
        "00199-1087463750-binary-tree-right-side-view.go",
        "00199-1087463822-binary-tree-right-side-view.go",
        "00199-1087464010-binary-tree-right-side-view.go",
        "00199-1087475497-binary-tree-right-side-view.go",
        "00210-1091200613-course-schedule-ii.go",
        "00212-1091201217-word-search-ii.go",
        "00217-691371448-contains-duplicate.go",
        "00224-1091198199-basic-calculator.go",
        "00225-693426224-implement-stack-using-queues.go",
        "00230-1090575563-kth-smallest-element-in-a-bst.go",
        "00236-1089075769-lowest-common-ancestor-of-a-binary-tree.go",
        "00236-1089076574-lowest-common-ancestor-of-a-binary-tree.go",
        "00278-691657897-first-bad-version.go",
        "00283-693596429-move-zeroes.go",
        "00283-693603036-move-zeroes.go",
        "00283-693604925-move-zeroes.go",
        "00283-693605143-move-zeroes.go",
        "00283-693605291-move-zeroes.go",
        "00295-1091202059-find-median-from-data-stream.go",
        "00297-1092217408-serialize-and-deserialize-binary-tree.go",
        "00344-693609237-reverse-string.go",
        "00350-692914276-intersection-of-two-arrays-ii.go",
        "00350-692921329-intersection-of-two-arrays-ii.go",
        "00367-692766447-valid-perfect-square.go",
        "00374-691650979-guess-number-higher-or-lower.go",
        "00433-1087543163-minimum-genetic-mutation.go",
        "00433-1087545728-minimum-genetic-mutation.go",
        "00445-689979036-add-two-numbers-ii.go",
        "00452-1091199566-minimum-number-of-arrows-to-burst-balloons.go",
        "00456-694834562-132-pattern.go",
        "00501-1088997757-find-mode-in-binary-search-tree.go",
        "00501-1089001471-find-mode-in-binary-search-tree.go",
        "00501-1089003627-find-mode-in-binary-search-tree.go",
        "00501-1089004448-find-mode-in-binary-search-tree.go",
        "00502-1091201914-ipo.go",
        "00557-693639118-reverse-words-in-a-string-iii.go",
        "00581-692226479-shortest-unsorted-continuous-subarray.go",
        "00581-692226609-shortest-unsorted-continuous-subarray.go",
        "00637-1087469134-average-of-levels-in-binary-tree.go",
        "00637-1087472492-average-of-levels-in-binary-tree.go",
        "00653-690025524-two-sum-iv-input-is-a-bst.go",
        "00653-690040505-two-sum-iv-input-is-a-bst.go",
        "00653-690047944-two-sum-iv-input-is-a-bst.go",
        "00653-690048286-two-sum-iv-input-is-a-bst.go",
        "00745-693729962-find-smallest-letter-greater-than-target.go",
        "00772-1091201489-construct-quad-tree.go",
        "00792-691642817-binary-search.go",
        "00792-691652127-binary-search.go",
        "00816-1093848808-design-hashset.go",
        "00859-1092890108-design-circular-deque.go",
        "00874-694818582-backspace-string-compare.go",
        "00882-692383619-peak-index-in-a-mountain-array.go",
        "00941-691691870-sort-array-by-parity.go",
        "00954-1088426545-maximum-sum-circular-subarray.go",
        "00954-1088427588-maximum-sum-circular-subarray.go",
        "00954-1088429621-maximum-sum-circular-subarray.go",
        "01018-692736039-largest-perimeter-triangle.go",
        "01019-690922740-squares-of-a-sorted-array.go",
        "01019-692273896-squares-of-a-sorted-array.go",
        "01019-692275599-squares-of-a-sorted-array.go",
        "01031-690941182-add-to-array-form-of-integer.go",
        "01375-690364689-find-palindrome-with-fixed-length.go",
        "01406-692713623-subtract-the-product-and-sum-of-digits-of-an-integer.go",
        "01486-692797975-find-the-distance-value-between-two-arrays.go",
        "01552-1090492007-build-an-array-with-stack-operations.go",
        "01552-1090492801-build-an-array-with-stack-operations.go",
        "01584-691613273-average-salary-excluding-the-minimum-and-maximum-salary.go",
        "01627-1091124362-last-moment-before-all-ants-fall-out-of-a-plank.go",
        "01627-1091124701-last-moment-before-all-ants-fall-out-of-a-plank.go",
        "01627-1091127510-last-moment-before-all-ants-fall-out-of-a-plank.go",
        "01630-691609936-count-odd-numbers-in-an-interval-range.go",
        "01657-1091922545-find-the-winner-of-an-array-game.go",
        "01657-1091924184-find-the-winner-of-an-array-game.go",
        "01798-692728978-max-number-of-k-sum-pairs.go",
        "01866-1095852311-restore-the-array-from-adjacent-pairs.go",
        "01866-1095854733-restore-the-array-from-adjacent-pairs.go",
        "01885-1095037372-count-number-of-homogenous-substrings.go",
        "01888-692748993-find-nearest-point-that-has-the-same-x-or-y-coordinate.go",
        "01894-1093844607-merge-strings-alternately.go",
        "01950-693736702-sign-of-the-product-of-an-array.go",
        "01955-1092750852-seat-reservation-manager.go",
        "01955-1092754707-seat-reservation-manager.go",
        "02049-1093720985-eliminate-maximum-number-of-monsters.go",
        "02347-1089803621-count-nodes-equal-to-average-of-subtree.go",
        "02519-1088205030-find-the-original-array-of-prefix-xor.go",
        "02519-1088205506-find-the-original-array-of-prefix-xor.go",
        "03056-1094276079-determine-if-a-cell-is-reachable-at-a-given-time.go",
    ],
    importpath = "shishifubing.com/leetcode/submissions",
    visibility = ["//visibility:public"],
)
