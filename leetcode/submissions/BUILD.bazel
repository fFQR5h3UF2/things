load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "submissions",
    srcs = [
        "00001-two-sum-689996230.go",
        "00001-two-sum-692799105.go",
        "00002-add-two-numbers-689836294.go",
        "00009-palindrome-number-690057830.go",
        "00013-roman-to-integer-688942766.go",
        "00013-roman-to-integer-688944623.go",
        "00013-roman-to-integer-688944842.go",
        "00013-roman-to-integer-688947098.go",
        "00014-longest-common-prefix-689722001.go",
        "00014-longest-common-prefix-689740949.go",
        "00014-longest-common-prefix-689769078.go",
        "00020-valid-parentheses-690416642.go",
        "00021-merge-two-sorted-lists-690739883.go",
        "00023-merge-k-sorted-lists-1091201621.go",
        "00025-reverse-nodes-in-k-group-1091200011.go",
        "00026-remove-duplicates-from-sorted-array-694400494.go",
        "00030-substring-with-concatenation-of-all-words-1091199226.go",
        "00035-search-insert-position-691682236.go",
        "00035-search-insert-position-692355461.go",
        "00042-trapping-rain-water-1087560136.go",
        "00052-n-queens-ii-1091201363.go",
        "00053-maximum-subarray-691571728.go",
        "00057-insert-interval-1091198577.go",
        "00069-sqrtx-693649416.go",
        "00076-minimum-window-substring-1091199352.go",
        "00088-merge-sorted-array-690860583.go",
        "00088-merge-sorted-array-690867602.go",
        "00088-merge-sorted-array-692799831.go",
        "00098-validate-binary-search-tree-1088457217.go",
        "00098-validate-binary-search-tree-1088466156.go",
        "00098-validate-binary-search-tree-1088466442.go",
        "00102-binary-tree-level-order-traversal-1087481177.go",
        "00102-binary-tree-level-order-traversal-1087485265.go",
        "00103-binary-tree-zigzag-level-order-traversal-1087492568.go",
        "00103-binary-tree-zigzag-level-order-traversal-1087500671.go",
        "00103-binary-tree-zigzag-level-order-traversal-1087501208.go",
        "00105-construct-binary-tree-from-preorder-and-inorder-traversal-1091200227.go",
        "00106-construct-binary-tree-from-inorder-and-postorder-traversal-1091200359.go",
        "00114-flatten-binary-tree-to-linked-list-1090504012.go",
        "00121-best-time-to-buy-and-sell-stock-692928951.go",
        "00124-binary-tree-maximum-path-sum-1091200483.go",
        "00127-word-ladder-1091201004.go",
        "00129-sum-root-to-leaf-numbers-1089101627.go",
        "00129-sum-root-to-leaf-numbers-1089106155.go",
        "00148-sort-list-1089829638.go",
        "00162-find-peak-element-1091201779.go",
        "00167-two-sum-ii-input-array-is-sorted-690000287.go",
        "00167-two-sum-ii-input-array-is-sorted-693606840.go",
        "00189-rotate-array-692284664.go",
        "00189-rotate-array-692352888.go",
        "00191-number-of-1-bits-692709119.go",
        "00199-binary-tree-right-side-view-1087461734.go",
        "00199-binary-tree-right-side-view-1087463750.go",
        "00199-binary-tree-right-side-view-1087463822.go",
        "00199-binary-tree-right-side-view-1087464010.go",
        "00199-binary-tree-right-side-view-1087475497.go",
        "00210-course-schedule-ii-1091200613.go",
        "00212-word-search-ii-1091201217.go",
        "00217-contains-duplicate-691371448.go",
        "00224-basic-calculator-1091198199.go",
        "00225-implement-stack-using-queues-693426224.go",
        "00230-kth-smallest-element-in-a-bst-1090575563.go",
        "00236-lowest-common-ancestor-of-a-binary-tree-1089075769.go",
        "00236-lowest-common-ancestor-of-a-binary-tree-1089076574.go",
        "00278-first-bad-version-691657897.go",
        "00283-move-zeroes-693596429.go",
        "00283-move-zeroes-693603036.go",
        "00283-move-zeroes-693604925.go",
        "00283-move-zeroes-693605143.go",
        "00283-move-zeroes-693605291.go",
        "00295-find-median-from-data-stream-1091202059.go",
        "00297-serialize-and-deserialize-binary-tree-1092217408.go",
        "00344-reverse-string-693609237.go",
        "00350-intersection-of-two-arrays-ii-692914276.go",
        "00350-intersection-of-two-arrays-ii-692921329.go",
        "00367-valid-perfect-square-692766447.go",
        "00374-guess-number-higher-or-lower-691650979.go",
        "00433-minimum-genetic-mutation-1087543163.go",
        "00433-minimum-genetic-mutation-1087545728.go",
        "00445-add-two-numbers-ii-689979036.go",
        "00452-minimum-number-of-arrows-to-burst-balloons-1091199566.go",
        "00456-132-pattern-694834562.go",
        "00501-find-mode-in-binary-search-tree-1088997757.go",
        "00501-find-mode-in-binary-search-tree-1089001471.go",
        "00501-find-mode-in-binary-search-tree-1089003627.go",
        "00501-find-mode-in-binary-search-tree-1089004448.go",
        "00502-ipo-1091201914.go",
        "00557-reverse-words-in-a-string-iii-693639118.go",
        "00581-shortest-unsorted-continuous-subarray-692226479.go",
        "00581-shortest-unsorted-continuous-subarray-692226609.go",
        "00637-average-of-levels-in-binary-tree-1087469134.go",
        "00637-average-of-levels-in-binary-tree-1087472492.go",
        "00653-two-sum-iv-input-is-a-bst-690025524.go",
        "00653-two-sum-iv-input-is-a-bst-690040505.go",
        "00653-two-sum-iv-input-is-a-bst-690047944.go",
        "00653-two-sum-iv-input-is-a-bst-690048286.go",
        "00745-find-smallest-letter-greater-than-target-693729962.go",
        "00772-construct-quad-tree-1091201489.go",
        "00792-binary-search-691642817.go",
        "00792-binary-search-691652127.go",
        "00816-design-hashset-1093848808.go",
        "00859-design-circular-deque-1092890108.go",
        "00874-backspace-string-compare-694818582.go",
        "00882-peak-index-in-a-mountain-array-692383619.go",
        "00941-sort-array-by-parity-691691870.go",
        "00954-maximum-sum-circular-subarray-1088426545.go",
        "00954-maximum-sum-circular-subarray-1088427588.go",
        "00954-maximum-sum-circular-subarray-1088429621.go",
        "01018-largest-perimeter-triangle-692736039.go",
        "01019-squares-of-a-sorted-array-690922740.go",
        "01019-squares-of-a-sorted-array-692273896.go",
        "01019-squares-of-a-sorted-array-692275599.go",
        "01031-add-to-array-form-of-integer-690941182.go",
        "01375-find-palindrome-with-fixed-length-690364689.go",
        "01406-subtract-the-product-and-sum-of-digits-of-an-integer-692713623.go",
        "01486-find-the-distance-value-between-two-arrays-692797975.go",
        "01552-build-an-array-with-stack-operations-1090492007.go",
        "01552-build-an-array-with-stack-operations-1090492801.go",
        "01584-average-salary-excluding-the-minimum-and-maximum-salary-691613273.go",
        "01627-last-moment-before-all-ants-fall-out-of-a-plank-1091124362.go",
        "01627-last-moment-before-all-ants-fall-out-of-a-plank-1091124701.go",
        "01627-last-moment-before-all-ants-fall-out-of-a-plank-1091127510.go",
        "01630-count-odd-numbers-in-an-interval-range-691609936.go",
        "01657-find-the-winner-of-an-array-game-1091922545.go",
        "01657-find-the-winner-of-an-array-game-1091924184.go",
        "01798-max-number-of-k-sum-pairs-692728978.go",
        "01866-restore-the-array-from-adjacent-pairs-1095852311.go",
        "01866-restore-the-array-from-adjacent-pairs-1095854733.go",
        "01885-count-number-of-homogenous-substrings-1095037372.go",
        "01888-find-nearest-point-that-has-the-same-x-or-y-coordinate-692748993.go",
        "01894-merge-strings-alternately-1093844607.go",
        "01950-sign-of-the-product-of-an-array-693736702.go",
        "01955-seat-reservation-manager-1092750852.go",
        "01955-seat-reservation-manager-1092754707.go",
        "02049-eliminate-maximum-number-of-monsters-1093720985.go",
        "02347-count-nodes-equal-to-average-of-subtree-1089803621.go",
        "02519-find-the-original-array-of-prefix-xor-1088205030.go",
        "02519-find-the-original-array-of-prefix-xor-1088205506.go",
        "03056-determine-if-a-cell-is-reachable-at-a-given-time-1094276079.go",
    ],
    importpath = "shishifubing.com/leetcode/submissions",
    visibility = ["//visibility:public"],
)
