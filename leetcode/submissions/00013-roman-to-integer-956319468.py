# Submission title: Roman to Integer
# Submission url  : https://leetcode.com/problems/roman-to-integer/description/
# Submission url  : https://leetcode.com/submissions/detail/956319468/
# Submission json : {"id":956319468,"status_display":"Accepted","lang":"python3","question_id":13,"title_slug":"roman-to-integer","code":"class Solution:\n    def romanToInt(self, s: str) -> int:\n        result = 0\n        skip = False\n\n        values = {\n            \"I\": 1,\n            \"V\": 5,\n            \"X\": 10,\n            \"L\": 50,\n            \"C\": 100,\n            \"D\": 500,\n            \"M\": 1000\n        }\n        special_cases = {\n            \"I\": [\"V\", \"X\"],\n            \"X\": [\"L\", \"C\"],\n            \"C\": [\"D\", \"M\"]\n        }\n\n        for i, symbol in enumerate(s):\n            if skip:\n                skip = False\n                continue\n\n            next = None\n            if i < (len(s) - 1):\n                next = s[i+1]\n\n            if next in special_cases.get(symbol, []):\n                skip = True\n                result += values[next] - values[symbol]\n                continue\n            \n            result += values[symbol]\n\n        return result\n            ","title":"Roman to Integer","url":"/submissions/detail/956319468/","lang_name":"Python3","time":"8 months, 2 weeks","timestamp":1684916780,"status":10,"runtime":"67 ms","is_pending":"Not Pending","memory":"16.3 MB","compare_resulthas_notes":false,"flag_type":1}


class Solution:
    def romanToInt(self, s: str) -> int:
        result = 0
        skip = False

        values = {"I": 1, "V": 5, "X": 10, "L": 50, "C": 100, "D": 500, "M": 1000}
        special_cases = {"I": ["V", "X"], "X": ["L", "C"], "C": ["D", "M"]}

        for i, symbol in enumerate(s):
            if skip:
                skip = False
                continue

            next = None
            if i < (len(s) - 1):
                next = s[i + 1]

            if next in special_cases.get(symbol, []):
                skip = True
                result += values[next] - values[symbol]
                continue

            result += values[symbol]

        return result
