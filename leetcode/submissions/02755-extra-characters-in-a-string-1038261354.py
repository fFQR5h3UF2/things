# Submission title: Extra Characters in a String
# Submission url  : https://leetcode.com/problems/extra-characters-in-a-string/description/
# Submission url  : https://leetcode.com/submissions/detail/1038261354/
# Submission json : {"id":1038261354,"status_display":"Accepted","lang":"python3","question_id":2755,"title_slug":"extra-characters-in-a-string","code":"class Solution:\n    def minExtraChar(self, s: str, dictionary: List[str]) -> int:\n        chars_count = len(s)\n\n        @cache\n        def dp(i: int) -> int:\n            chars_left = chars_count - i\n            if chars_left == 0:\n                return 0\n            \n            min_extra_chars = chars_left\n\n            for word in dictionary:\n                word_length = len(word)\n\n                if word_length > chars_left or s[i:i+word_length] != word:\n                    continue\n                \n                if word_length == chars_left:\n                    return 0\n\n                min_extra_chars = min(min_extra_chars, dp(i + word_length))\n\n            return min(min_extra_chars, 1 + dp(i + 1))\n        \n        return dp(0)\n\n                \n","title":"Extra Characters in a String","url":"/submissions/detail/1038261354/","lang_name":"Python3","time":"5Â months","timestamp":1693641041,"status":10,"runtime":"247 ms","is_pending":"Not Pending","memory":"16.8 MB","compare_resulthas_notes":true,"flag_type":1}


class Solution:
    def minExtraChar(self, s: str, dictionary: List[str]) -> int:
        chars_count = len(s)

        @cache
        def dp(i: int) -> int:
            chars_left = chars_count - i
            if chars_left == 0:
                return 0

            min_extra_chars = chars_left

            for word in dictionary:
                word_length = len(word)

                if word_length > chars_left or s[i : i + word_length] != word:
                    continue

                if word_length == chars_left:
                    return 0

                min_extra_chars = min(min_extra_chars, dp(i + word_length))

            return min(min_extra_chars, 1 + dp(i + 1))

        return dp(0)
