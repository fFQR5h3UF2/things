# do not wait for escape sequences
set -s escape-time 0

# color fix
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

set-option -g focus-events on

# change prefix key
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# run the new window script in all new windows
set-hook -g after-new-window "send-keys tmux-new-window Enter"

# delete all associated popups when they are no longer needed
set-hook -g session-closed "run-shell 'tmux-kill-popup-sessions #{session_name}'"

bind-key "&" confirm-before -p "kill-window #W? (y/n)" "
    run-shell 'tmux-kill-popup-sessions #{session_name} #{window_id}';
    kill-window
"
bind-key "x" confirm-before -p "kill-pane #P? (y/n)" "
    if-shell '[ #{window_panes} -eq 1 ]' {
        run-shell 'tmux-kill-popup-sessions #{session_name} #{window_id}';
        kill-window
    } {
        kill-pane
    }
"
# if last pane died, respawn it
# it is needed to ensure that all windows can be deleted only manually
set -g remain-on-exit on
set-hook -g pane-died "
  if '[ #{window_panes} -eq 1 ]' {
    respawn-pane -c '#{pane_current_path}'
  } {
    kill-pane
  }
"

# toggle popup
bind-key "t" run-shell tmux-toggle-popup

# reload the config
bind-key "r" source-file ~/.config/tmux/tmux.conf

# window numbers start from 1
set -g base-index 1

# vim-like copying
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# vim-like pane switching
bind-key -r "^" last-window
bind-key -r "k" select-pane -U
bind-key -r "j" select-pane -D
bind-key -r "h" select-pane -L
bind-key -r "l" select-pane -R

# split windows will be created using the current pane path
bind-key '"' split-window -v -c '#{pane_current_path}'
bind-key "%" split-window -h -c '#{pane_current_path}'
bind-key "c" new-window

# status line style
set -g status on
set-option -g status-position top
set -g status-style "bg=#333333 fg=#ffffff"
set -g status-justify "left"
set -g status-left "#[bg=#ffffff,fg=#333333] #S #[default] "
set -g status-right " #[bg=#ffffff,fg=#333333] #h #[default]"
setw -g window-status-activity-style "underscore"
setw -g window-status-separator " | "
setw -g window-status-format "[#I] #W ‹#F›"
setw -g window-status-current-format "#[bg=#ffffff,fg=#333333][#I]#[default] #W ‹#F›"
