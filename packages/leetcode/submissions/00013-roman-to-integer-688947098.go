// Submission title: for Roman to Integer
// Submission url  : https://leetcode.com/submissions/detail/688947098/
// Submission json : {"id": 688947098, "status_display": "Accepted", "lang": "golang", "question_id": 13, "title_slug": "roman-to-integer", "code": "func romanToInt(input string) int {\n\tvar result int\n\ttypes := map[rune]int{\n\t\t'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000,\n\t}\n\tvar previous rune\n\tfor _, character := range input {\n\t\tresult += types[character]\n\t\tswitch {\n\t\tcase previous == 'I' && (character == 'V' || character == 'X'):\n\t\t\tfallthrough\n\t\tcase previous == 'X' && (character == 'L' || character == 'C'):\n\t\t\tfallthrough\n\t\tcase previous == 'C' && (character == 'D' || character == 'M'):\n\t\t\tresult -= types[previous] * 2\n\t\t}\n\t\tprevious = character\n\t}\n\treturn result\n}\n", "title": "Roman to Integer", "url": "/submissions/detail/688947098/", "lang_name": "Go", "time": "1\u00a0year, 9\u00a0months", "timestamp": 1651125859, "status": 10, "runtime": "21 ms", "is_pending": "Not Pending", "memory": "2.9 MB", "compare_resulthas_notes": false, "flag_type": 1}

package submissions

func romanToInt(input string) int {
	var result int
	types := map[rune]int{
		'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000,
	}
	var previous rune
	for _, character := range input {
		result += types[character]
		switch {
		case previous == 'I' && (character == 'V' || character == 'X'):
			fallthrough
		case previous == 'X' && (character == 'L' || character == 'C'):
			fallthrough
		case previous == 'C' && (character == 'D' || character == 'M'):
			result -= types[previous] * 2
		}
		previous = character
	}
	return result
}
